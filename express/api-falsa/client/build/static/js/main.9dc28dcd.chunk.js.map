{"version":3,"sources":["actions/fetchPokemon.js","components/Pokemon.js","actions/fetchExtremo.js","components/PokemonAxios.js","App.js","index.js"],"names":["fetchPokemon","a","fetch","res","json","data","results","map","name","Pokemon","useState","items","setItems","onClick","arr","alert","listItems","key","className","url","fetchExtremo","requests","next","response","push","flat","PokemonAxios","useEffect","fetchAxios","getPokemon","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAgBeA,EAhBG,uCAAG,8BAAAC,EAAA,+EAEKC,MACd,wDAHS,cAEPC,EAFO,gBAKMA,EAAIC,OALV,cAKPC,EALO,yBAMNA,EAAKC,QAAQC,KAAI,qBAAGC,SANd,uGAAH,qD,OC6BHC,EA1BC,WAAO,IAAD,EACQC,mBAAS,IADjB,mBACXC,EADW,KACJC,EADI,KAGZC,EAAO,uCAAG,4BAAAZ,EAAA,+EAEUD,IAFV,OAEFc,EAFE,OAGRF,EAASE,GAHD,gDAKRC,MAAM,EAAD,IALG,yDAAH,qDAYPC,EAAYL,EAAMJ,KAAI,SAACC,EAAMS,GAAP,OAAe,6BAAeT,GAANS,MAEpD,OACI,0BAASC,UAAU,kBAAnB,UACI,6CACA,wBAAQL,QAASA,EAAjB,2BACA,6BAAKG,QCxBXhB,EAAY,uCAAG,WAAOmB,GAAP,iBAAAlB,EAAA,+EAEKC,MAAMiB,GAFX,cAEPhB,EAFO,gBAGMA,EAAIC,OAHV,cAGPC,EAHO,yBAINA,GAJM,uGAAH,sDAwBHe,EAZG,uCAAG,kCAAAnB,EAAA,sDACXoB,EAAW,GACbC,EAAO,oCAFM,WAGVA,EAHU,iCAIUtB,EAAasB,GAJvB,OAIPC,EAJO,OAKbD,EAAOC,EAASD,KAChBD,EAASG,KAAKD,GAND,8BAQXjB,EAAUe,EAASd,KAAI,qBAAED,WAAsBmB,OAAOlB,KAAI,qBAAEC,QARjD,kBASVF,GATU,4CAAH,qDCkBHoB,EA3BM,WAAO,IAAD,EACGhB,mBAAS,IADZ,mBAChBC,EADgB,KACTC,EADS,KAGvBe,qBAAU,YACU,uCAAG,4BAAA1B,EAAA,+EAEO2B,IAFP,OAELd,EAFK,OAGXF,EAASE,GAHE,gDAKXC,MAAM,EAAD,IALM,yDAAH,qDAShBc,KACD,IAEH,IAAMb,EAAYL,EAAMJ,KAAI,SAACC,EAAMS,GAAP,OAAe,6BAAeT,GAANS,MAEpD,OACI,0BAASC,UAAU,kBAAnB,UACI,uDACA,yEACA,6BAAKF,QCHFc,MAjBf,WACI,OACI,mCACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,IAAlB,SACI,cAAC,EAAD,cCTxBE,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.9dc28dcd.chunk.js","sourcesContent":["const fetchPokemon = async () => {\n    try {\n        const res = await fetch(\n            'https://pokeapi.co/api/v2/pokemon?offset=0&limit=807',\n        );\n        const data = await res.json();\n        return data.results.map(({ name }) => name);\n    } catch (err) {\n        throw err;\n    }\n};\n// fetch('https://pokeapi.co/api/v2/pokemon?offset=0&limit=807')\n//     .then((res) => res.json())\n//     .then((data) => data.results.map(({ name }) => name))\n//     .catch((err) => err);\n\nexport default fetchPokemon;\n","import React, { useState } from 'react';\nimport fetchPokemon from '../actions/fetchPokemon';\n\nconst Pokemon = () => {\n    const [items, setItems] = useState([]);\n\n    const onClick = async () => {\n        try {\n            const arr = await fetchPokemon();\n            setItems(arr);\n        } catch (err) {\n            alert(err);\n        }\n        // fetchPokemon()\n        //     .then((arr) => setItems(arr))\n        //     .catch((err) => alert(err));\n    };\n\n    const listItems = items.map((name, key) => <li key={key}>{name}</li>);\n\n    return (\n        <section className=\"pokemon-section\">\n            <h1>Pokemon API</h1>\n            <button onClick={onClick}>Fetch Pokemon</button>\n            <ul>{listItems}</ul>\n        </section>\n    );\n};\n\nexport default Pokemon;\n","const fetchPokemon = async (url) => {\n    try {\n        const res = await fetch(url);\n        const data = await res.json();\n        return data;\n    } catch (err) {\n        throw err;\n    }\n};\n\n// por si acaso si el API no nos deja cambiar los \"paramaters\"\n\nconst fetchExtremo = async () => {\n    const requests = [];\n    let next = 'https://pokeapi.co/api/v2/pokemon';\n    while (next) {\n        const response = await fetchPokemon(next);\n        next = response.next;\n        requests.push(response);\n    }\n    const results = requests.map(({results}) => results).flat().map(({name}) => name);\n    return results;\n};\n\nexport default fetchExtremo;\n","import React, { useEffect, useState } from 'react';\nimport fetchAxios from '../actions/fetchExtremo';\n\nconst PokemonAxios = () => {\n    const [items, setItems] = useState([]);\n\n    useEffect(() => {\n        const getPokemon = async () => {\n            try {\n                const arr = await fetchAxios();\n                setItems(arr);\n            } catch (err) {\n                alert(err);\n            }\n        };\n\n        getPokemon();\n    }, []);\n\n    const listItems = items.map((name, key) => <li key={key}>{name}</li>);\n\n    return (\n        <section className=\"pokemon-section\">\n            <h1>Pokemon API con Axios</h1>\n            <button>No Bot√≥n Necesario con useEffect</button>\n            <ul>{listItems}</ul>\n        </section>\n    );\n};\n\nexport default PokemonAxios;\n","import { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport './App.css';\nimport Pokemon from './components/Pokemon';\nimport PokemonAxios from './components/PokemonAxios';\n\nfunction App() {\n    return (\n        <>\n            <Router>\n                <Switch>\n                    <Route path=\"/axios\">\n                        <PokemonAxios />\n                    </Route>\n                    <Route exact path=\"/\">\n                        <Pokemon />\n                    </Route>\n                </Switch>\n            </Router>\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}